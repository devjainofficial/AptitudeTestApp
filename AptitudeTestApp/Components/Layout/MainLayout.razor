@using Radzen.Blazor
@inherits LayoutComponentBase
@implements IDisposable
@inject AuthenticationStateProvider AuthenticationStateProvider

@inject NavigationManager NavigationManager

<PageTitle>Talent Scope</PageTitle>

<div class="layout-wrapper">
    <RadzenNotification />

    <!-- Top Navbar for Logged-in Users Only -->
    <AuthorizeView>
        <Authorized>
            <nav class="navbar navbar-expand-lg bg-white shadow-sm border-bottom sticky-top px-3">
                <div class="container-fluid">
                    <!-- Logo -->
                    <a class="navbar-brand d-flex align-items-center fw-bold text-dark" href="/">
                        <i class="bi bi-lightning-charge-fill me-2 text-danger"></i> Talent Scope
                    </a>

                    <!-- Toggler for small screens -->
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarMain" aria-controls="navbarMain" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                                                       
                    <!-- Nav Content -->
                    <div class="collapse navbar-collapse" id="navbarMain">
                        <!-- Left Menu -->
                        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                            <li class="nav-item">
                                <NavLink class="nav-link text-dark fw-semibold" href="/" Match="NavLinkMatch.All">
                                    <i class="me-1"></i> Dashboard
                                </NavLink>
                            </li>
                            <li class="nav-item">
                                <NavLink class="nav-link text-dark fw-semibold" href="/admin/universities">
                                    <i class="bi bi-bank me-1"></i> Universities
                                </NavLink>
                            </li>
                            <li class="nav-item">
                                <NavLink class="nav-link text-dark fw-semibold" href="/admin/question-bank">
                                    <i class="bi bi-question-circle me-1"></i> Questions
                                </NavLink>
                            </li>
                            <li class="nav-item">
                                <NavLink class="nav-link text-dark fw-semibold" href="/admin/test-links">
                                    <i class="bi bi-file-earmark-check me-1"></i> Tests
                                </NavLink>
                            </li>
                            <li class="nav-item">
                                <NavLink class="nav-link text-dark fw-semibold" href="/admin/student-results">
                                    <i class="bi bi-people me-1"></i> Submissions
                                </NavLink>
                            </li>
                            @if (isSuperAdmin)
                            {
                                <li class="nav-item">
                                    <NavLink class="nav-link text-dark fw-semibold" href="/superadmin/user-approvals">
                                        <i class="bi bi-person-check me-1"></i> Approvals
                                    </NavLink>
                                </li>
                            }
                        </ul>

                        <!-- Right Profile Menu -->
                        <ul class="navbar-nav ms-auto align-items-center">
                            <li class="nav-item">
                                <NavLink class="nav-link" href="Account/Manage">
                                    <i class="bi bi-person-circle me-1"></i> @context.User.Identity?.Name
                                </NavLink>
                            </li>
                            <li class="nav-item">
                                <form class="d-inline" action="Account/Logout" method="post">
                                    <AntiforgeryToken />
                                    <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                                    <button type="submit" class="btn btn-sm btn-outline-danger ms-2">
                                        <i class="bi bi-box-arrow-right me-1"></i> Logout
                                    </button>
                                </form>
                            </li>
                        </ul>
                    </div>
                </div>
            </nav>

        </Authorized>
    </AuthorizeView>

    <!-- Main Content -->
    <main class="container-fluid mt-3">
        @Body
    </main>
</div>

<!-- Error UI -->
<div id="blazor-error-ui" class="alert alert-danger fixed-bottom m-2 shadow" data-nosnippet>
    <span>An unhandled error has occurred.</span>
    <a href="." class="alert-link ms-2">Reload</a>
    <span class="dismiss btn-close float-end" style="cursor:pointer;" onclick="this.parentElement.style.display='none'"></span>
</div>

@code {
    private string? currentUrl;

    private bool isSuperAdmin = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        isSuperAdmin = user.IsInRole("SuperAdmin");

        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
