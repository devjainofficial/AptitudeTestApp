
@if (IsVisible)
{
    <div class="modal-overlay" @onclick="Cancel">
        <div class="modal-dialog" @onclick:stopPropagation="true">
            <div class="modal-content">
                <h4>@Title</h4>
                <p>@Message</p>
                <div class="modal-buttons">
                    <button class="btn-cancel" @onclick="Cancel">Cancel</button>
                    <button class="btn-confirm" @onclick="Confirm">OK</button>
                </div>
            </div>
        </div>
    </div>
}

<style>
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000;
    }

    .modal-dialog {
        background: white;
        border-radius: 8px;
        padding: 24px;
        max-width: 400px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.3);
    }

    .modal-content h4 {
        margin: 0 0 16px 0;
        color: #333;
    }

    .modal-content p {
        margin: 0 0 24px 0;
        color: #666;
    }

    .modal-buttons {
        display: flex;
        gap: 12px;
        justify-content: flex-end;
    }

    .btn-cancel, .btn-confirm {
        padding: 8px 16px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    .btn-cancel {
        background: #f5f5f5;
        color: #333;
    }

    .btn-confirm {
        background: #007bff;
        color: white;
    }

    .btn-cancel:hover {
        background: #e9e9e9;
    }

    .btn-confirm:hover {
        background: #0056b3;
    }
</style>

@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public string Title { get; set; } = "Confirm";
    [Parameter] public string Message { get; set; } = "";
    [Parameter] public EventCallback<bool> OnResult { get; set; }

    private async Task Confirm() => await OnResult.InvokeAsync(true);
    private async Task Cancel() => await OnResult.InvokeAsync(false);
}