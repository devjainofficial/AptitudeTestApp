@page "/test/completed/{SubmissionId:guid}"
@using AptitudeTestApp.Application.DTOs
@using AptitudeTestApp.Application.Interfaces
@using AptitudeTestApp.Data.Models
@inject ITestSessionService TestSessionService
@inject IStudentSubmissionService StudentSubmissionService
@inject NavigationManager Navigation

<PageTitle>Test Completed</PageTitle>

@if (submission == null)
{
    <div class="d-flex justify-content-center mt-5">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading results...</span>
        </div>
    </div>
}
else if (!submission.TestSession.ShowResult && !submission.IsDisqualified)
{
    <div class="container py-5">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="border border-dark rounded-3 p-4 text-center">
                    <h3 class="fw-bold text-dark mb-3">Test Completed</h3>
                    <p class="text-muted mb-4">Thank you for submitting the test.</p>
                    <p class="text-muted">Your responses have been recorded successfully.</p>
                    <p class="text-muted">The test results will be shared by the university separately.</p>
                    <div class="mt-4">
                        <i class="bi bi-envelope-paper text-dark" style="font-size: 3rem;"></i>
                        <p class="mt-3">For more information, contact your university.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="container py-5">
        <div class="row justify-content-center">
            <div class="col-md-10">
                <div class="border border-dark rounded-3 p-4 bg-white">
                    <div class="text-center border-bottom border-dark pb-3 mb-4">
                        <h3 class="fw-bold text-dark">
                            @if (submission.IsDisqualified)
                            {
                                <i class="bi bi-x-circle me-2 text-danger">Test Disqualified</i>
                            }
                            else if (submission.PercentageScore >= submission.TestSession.PassingScore)
                            {
                                <i class="bi bi-check-circle me-2 text-success">Test Passed</i>
                            }
                            else
                            {
                                <i class="bi bi-exclamation-circle me-2 text-warning">Test Not Passed</i>
                            }
                        </h3>
                        <p class="text-muted">@submission.TestSession.TestName</p>
                    </div>

                    @if (submission.IsDisqualified)
                    {
                        <div class="alert alert-danger">
                            <h5>Test Disqualified</h5>
                            <p><strong>Reason:</strong> @submission.DisqualificationReason</p>
                            <p>Your test was submitted automatically due to rule violations.</p>
                        </div>
                    }
                    else
                    {
                        <div class="row text-center mb-4">
                            <div class="col-md-4">
                                <div class="border border-dark rounded-2 py-3">
                                    <h4 class="text-dark">@submission.PercentageScore.ToString("F1")%</h4>
                                    <small class="text-muted">Your Score</small>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="border border-dark rounded-2 py-3">
                                    <h4 class="text-dark">@submission.TotalScore / @submission.MaxPossibleScore</h4>
                                    <small class="text-muted">Points Earned</small>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="border border-dark rounded-2 py-3">
                                    <h4 class="text-dark">@FormatTime(submission.TimeTaken ?? 0)</h4>
                                    <small class="text-muted">Time Taken</small>
                                </div>
                            </div>
                        </div>
                    }

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <strong>Student Name:</strong> @submission.StudentName
                        </div>
                        <div class="col-md-6">
                            <strong>Email:</strong> @submission.StudentEmail
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <strong>University:</strong> @submission.TestSession.University.Name
                        </div>
                        <div class="col-md-6">
                            <strong>Test Date:</strong> @submission.StartTime.ToString("MMM dd, yyyy HH:mm")
                        </div>
                    </div>

                    @if (submission.TabSwitchCount > 0)
                    {
                        <div class="alert alert-warning">
                            <strong>Tab Switches Detected:</strong> @submission.TabSwitchCount
                            <br />
                            <small>Note: Excessive tab switching may impact your test validity.</small>
                        </div>
                    }

                    @if (!submission.IsDisqualified)
                    {
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <strong>Passing Score:</strong> @submission.TestSession.PassingScore%
                            </div>
                            <div class="col-md-6">
                                <strong>Result:</strong>
                                <span class="badge @(submission.PercentageScore >= submission.TestSession.PassingScore ? "bg-success" : "bg-danger")">
                                    @(submission.PercentageScore >= submission.TestSession.PassingScore ? "PASSED" : "FAILED")
                                </span>
                            </div>
                        </div>
                    }

                    <div class="text-center mt-4">
                        <p class="text-muted">
                            Thank you for completing the test. Your results have been recorded.
                            <br />
                            Please contact your university for further instructions.
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public Guid SubmissionId { get; set; }

    private StudentSubmissionDto? submission;

    protected override async Task OnInitializedAsync()
    {
        submission = await StudentSubmissionService.GetSubmissionDetailsByIdAsync(SubmissionId);
        if (submission == null)
        {
            Navigation.NavigateTo("/test/error");
            return;
        }
    }

    private string FormatTime(int seconds)
    {
        var time = TimeSpan.FromSeconds(seconds);
        return $"{time.Hours:D2}:{time.Minutes:D2}:{time.Seconds:D2}";
    }
}